getwd()
getwd()
mean(20)
### 在R中行叫做观测(observ)，列叫做变量（varibles）
x <- runif(200000, min = 1, max = 100)
length(x)
sum(x)
mean(x)
median(x)
memory.size()
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
.libPaths()
###################
x <- read.csv("CountMatrix.csv", header = T, nrows = 1)
getwd()
###################
x <- read.csv("data\CountMatrix.csv", header = T, nrows = 1)
###################
x <- read.csv("data/CountMatrix.csv", header = T, nrows = 1)
###################
x <- read.csv("Rdata/CountMatrix.csv", header = T, nrows = 1)
View(x)
###################
x <- read.csv("Rdata/CountMatrix.csv", header = T, row.names = 1)
View(x)
y <- read.csv("Rdata/heatmap.csv", row.names = 1)
View(y)
install.packages("pheatmap")
library(pheatmap)
heatmap(y)
pheatmap(y)
################
install.packages("openxlsx")
library(openxlsx)
x <- read.xlsx("Rdata/2015.xlsx", sheet = 1)
View(x)
x <- read.xlsx("Rdata/2015.xlsx", sheet = 1, row.names = 1)
data()
DNase
##########数据结构######
##vector 其实就是一个数字或者字符的集合 所有数据都是由向量构成的
a <- c(1,2)
a
class(a)
a <- c(1, "apple")
class(a)
?seq()
?rep
rep(1,5)
rep(c(1,2),5)
b <- c("red","green")
class(b)
##character 字符
a <- 1:50
b <- c("A","B")
rep(b, each = 50)
b <- rep(b, each = 50)
paste(b,a)
paste(b,a, sep = "")
########数据索引########
rivers
class(rivers)
rivers[1]
rivers[seq(1,141,2)]
rivers[-seq(1,141,2)]
rivers[c(T,F)]
rivers>>mean(rivers)
rivers > mean(rivers)
rivers[-c(rivers > mean(rivers))]
mean(rivers)
rivers[c(rivers > mean(rivers))]
rivers[rivers > mean(rivers)]
#######################
read.csv("Rdata/homo_length.csv")
#######################
x <- read.csv("Rdata/homo_length.csv")
x <- head(x,24)
x
barplot(x[,2], names.arg = x[,1])
#######矩阵########
#二维数据
x <- 1:100
m <- matrix(x, nrow = 4, byrow = T)
View(m)
m
m <- matrix(x, nrow = 25, byrow = T)
m
dim(m)
state.x77
x <- read.csv("Rdata/heatmap.csv", header = T, row.names = 1)
x
View(x)
?read.csv
x <- read.csv("Rdata/heatmap.csv", header = F, row.names = 1)
View(x)
x <- read.csv("Rdata/heatmap.csv", header = T, row.names = 1)
heatmap(x)
x <- read.csv("Rdata/heatmap.csv", header = T, row.names = 1)
heatmap(x)
class(x)
as.matrix(x)
as.matrix(x)
heatmap(x)
x <- as.matrix(x)
heatmap(x)
x[,6:10]
x <- x[,c(1:5,11:15,6:10,16:20)]
#apply函数可以将一维的函数拓展到二维
apply(x,1,sum)
apply(x,1,sd)
apply(x,2,sd)
apply(state.x77, 2, sum)
apply(state.x77,2, mean)[2]
View(state.x77)
?apply
read.csv("Rdata/2015.xlsx")
######数据框########
#矩阵和数据框的区别在于矩阵的内容只能是一种属性，只能都是逻辑值、数值或者是字符串，矩阵是一种特殊的数据框
#数据每一列是一个向量，而每一行则不是
library(openxlsx)
read.csv("Rdata/2015.xlsx")
read.xlsx("Rdata/2015.xlsx")
x <- read.xlsx("Rdata/2015.xlsx")
class(x)
x <- read.xlsx("Rdata/2015.xlsx", rowNames = 1)
class(x)
x <- read.xlsx("Rdata/2015.xlsx", rowNames = T)
id <- c(57,46,7717,36,23,75,39,33)
id <- c(57,46,77,17,36,23,75,39,33)
treatment <- rep("Treated",10)
sex <- rep("Male",10)
id <- c(57,46,77,17,36,23,75,39,33)
treatment <- rep("Treated",9)
sex <- rep("Male",9)
age <- c(27,29,30,32,46,58,59,59,63)
improved <- c("some","none","none","marked","marked","marked","none","marked","none")
paste(id,treatment,sex,age,improved)
a <- paste(id,treatment,sex,age,improved)
a
x <- data.frame(id,treatment,sex,age,improved)
View(state.x77)
mtcars[1,]
x <- read.xlsx("Rdata/2015.xlsx", rowNames = T)
class(x)
x[1,]
##########
x <- read.csv("Rdata/200genes.csv")
y <- read.csv("Rdata/121genes.csv")
View(y)
class(y)
as.vector(y)
x[y,]
class(x)
class(y)
y <- as.vector(y)
class(y)
##########
x <- read.csv("Rdata/200genes.csv", stringsAsFactors = F)
y <- read.csv("Rdata/121genes.csv",stringsAsFactors = F)
x[y,]
x[as.factor(y),]
?as.factor
x[as.vector(y),]
x[y$gene,]
##########
x <- read.csv("Rdata/200genes.csv", stringsAsFactors = F)
y <- read.csv("Rdata/121genes.csv",stringsAsFactors = F)
x[y$gene,]
z <- x[y$gene,]
View(z)
y$gene
x[unique(y$gene),]
View(y)
x[1,]
a <- y$gene
class(a)
y$gene
x[y$gene,]
##########
x <- read.csv("Rdata/200genes.csv", stringsAsFactors = F, row.names = 1)
y <- read.csv("Rdata/121genes.csv",stringsAsFactors = F)
x[1,]
x[unique(y$gene),]
na.omit(x[unique(y$gene),])
dta <- na.omit(x[unique(y$gene),])
dim(dta)
write.csv(dta, file = "Rdata/86genes.csv")
#######factor因子#######
#因子包括离散型和有序性数据（也就是除了数字）
#可以用来分组
x <- c("M","W","M","M","W","W","M")
factor(x)
table(x)
levels(x)
factor(x)
table(x)
levels(x)
x <- factor(x)
table(x)
levels(x)
state.division
table(state.region)
state.region
id <- c(57,46,77,17,36,23,75,39,33)
treatment <- rep("Treated",9)
sex <- rep("Male",9)
age <- c(27,29,30,32,46,58,59,59,63)
improved <- c("some","none","none","marked","marked","marked","none","marked","none")
x <- data.frame(id,treatment,sex,age,improved)
x
x <- data.frame(ID=id,treatment,sex,age,improved)
x
########time series#####
class(presidents)
######缺失数据######
#也就是NA
x <- 1:5
x[7] <- 7
mean(x)
is.na(x)
mean(x, na.rm = T)
x[is.na(x)]
install.packages("VIM")
library(VIM)
View(sleep)
#######factor因子#######
#因子包括离散型和有序性数据（也就是除了数字）
#可以用来分组
x <- c("M","W","M","M","W","W","M")
x <- factor(x)
table(x)
levels(x)
class(x)
x
########数据处理#######
#数据转换
#is 判断 as 转换
as.factor(mtcars$cyl)
gc()
mtcars[mtcars$mpg>=20,]
mtcars[mtcars$mpg>=20 & mtcars$cyl==4,]
########排序######
sort(rivers)
order(rivers)
rivers[order(rivers)]
#order比sort更有用，可以得到排名数字
mtcars[order(mtcars$mpg, decreasing = T),]
mtcars[order(mtcars$mpg, mtcars$cyl, decreasing = T),]
mtcars[order(mtcars$mpg, mtcars$cyl, decreasing = T),]
mtcars[order(mtcars$mpg & mtcars$cyl, decreasing = T),]
mtcars[order(mtcars$mpg, mtcars$cyl, decreasing = T),]
order(mtcars$mpg, mtcars$cyl, decreasing = T)
list(mtcars)
class(mtcars)
class(mtcars$cyl)
mtcars[order(mtcars$mpg, mtcars$cyl, decreasing = T),]
mtcars[order(mtcars$mpg, mtcars$cyl, decreasing = T),]
mtcars[order(mtcars$mpg, mtcars$disp, decreasing = T),]
mtcars[order(mtcars$cyl, mtcars$mpg,decreasing = T),]
]mtcars[order(mtcars$cyl, mtcars$mpg,decreasing = T),]
mtcars[order(mtcars$cyl, mtcars$mpg,decreasing = T),]
mtcars[order(mtcars$cyl, mtcars$mpg,decreasing = c(T,F)),]
